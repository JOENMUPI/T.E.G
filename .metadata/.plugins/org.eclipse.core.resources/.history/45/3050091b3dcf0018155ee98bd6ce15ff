package ORB;
import TEGApp.*; 

import org.omg.CosNaming.*;
import org.omg.CORBA.*;
import org.omg.PortableServer.*;
import org.omg.PortableServer.POA;

import ORG.ProfileMap;
@SuppressWarnings("finally")
class CtoSImpl extends CtoSPOA {
	private ORB orb;
	private ClientOrb co = new ClientOrb();
	public void setORB(ORB orb_val) { orb = orb_val; }
	public boolean test() { return true; }
	public void shutdown() { orb.shutdown(false); }
	public boolean senData(CS data) {
		try {
			if(ProfileMap.getPerm(data.profile, data.ObjectName, data.methodName)) {
				SP sp = new SP();
				sp.infoR = data.infoR;
				sp.methodName = data.methodName;
				sp.ObjectName = data.ObjectName;
				sp.params = data.params;
				sp.typeParams = data.typeParams;
				co.initStoP(orb);
				co.getStoPImpl().senData(sp);
			}
			
			else {
				
			}
		}
		
		finally { return ProfileMap.getPerm(data.profile, data.ObjectName, data.methodName); }
	}
}

public class ServerOrb {
	public static void main(String args[]) {
		try {
			start();
			ORB orb = ORB.init(args, null); 
			POA rootpoa = POAHelper.narrow(orb.resolve_initial_references("RootPOA"));
			rootpoa.the_POAManager().activate();
			CtoSImpl CtoSImpl = new CtoSImpl(); 
			CtoSImpl.setORB(orb); 
			NamingContextExt ncRef = NamingContextExtHelper.narrow(orb.resolve_initial_references("NameService"));
			NameComponent path[] = ncRef.to_name("CtoS");
			ncRef.rebind(path, CtoSHelper.narrow(rootpoa.servant_to_reference(CtoSImpl)));
			System.out.println("ServidorOrb C.S listo y en espera");
			orb.run();
		}
		
		catch (Exception e) { System.err.println("Error: " + e); e.printStackTrace(System.out); }
		System.out.println("Adios, cerrando servidor C.S");
	}
	
	private static void start() {
		ClientOrb co = new ClientOrb();
		XD xd = new XD();
		
		xd.schema = "security";
		xd.queryId = "loadProfiles";
		co.getXtoDImpl(null).dataRequest(xd);//recuerda aqui va lo de lb
	}
}