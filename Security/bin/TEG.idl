module TEGApp{
    struct byt{
        sequence<octet> obj;
    };
     
    struct baseS{
        string id;
        string ipResponse;
        string portResponse;
    };
    
    struct XC{ 
        string typeResponse;
        sequence<octet> Response;
    };
    
    struct CS{
        baseS response;
        long profile;
        string ObjectName;
        string methodName;
        sequence<string> params;
        sequence<string> typeParams;
    };
    
    struct SP{
        baseS response;
        string ObjectName;
        string methodName;
        sequence<string> params;
        sequence<string> typeParams;
    };
    
    struct PB{
        baseS response;
        string methodName;
        sequence<octet> params;
    };
    
    struct XD{
        string idMsg;
        string schema;
        string queryId;
        sequence<octet> params;
    };
    
    struct XL{
        string host;
        string objectName;
        string idMsg;
        string typeMsg;
        string infoMsg;
    };
    
    interface baseI{
        oneway void updateConnections(in string objName, in string host, in string port);
        oneway void shutdown();
        oneway void confirmation(in baseS data, in string objectName);
    };
    
    interface S: baseI{
        XC senData(in CS data);
    };
    
    interface P: baseI{
        XC senData(in SP data);
    };
    
    interface B: baseI{
        XC senData(in PB data);
    };
    
    interface D{
        oneway void shutdown();
        byt dataRequest(in XD data);
        boolean dataInsert(in XD data);
        boolean dataUpdate(in XD data);
        oneway void sendLog(in XL data);
    };
    
    interface C: baseI{
    
    };
    
    interface T{
        oneway void shutdown();
        byt getConnection(in string objName, in string host, in string port);
    };
};